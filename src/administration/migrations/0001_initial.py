# Generated by Django 3.0.8 on 2020-12-23 17:28

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import helper.enums


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('short_name', models.CharField(max_length=5)),
                ('phone_code', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Features',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('display_name', models.CharField(max_length=150)),
                ('key', models.CharField(max_length=150)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date created')),
                ('date_modified', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date modified')),
            ],
        ),
        migrations.CreateModel(
            name='Level',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('path', models.CharField(max_length=255, unique=True)),
                ('depth', models.PositiveIntegerField()),
                ('numchild', models.PositiveIntegerField(default=0)),
                ('name', models.CharField(max_length=150)),
                ('type', models.CharField(choices=[('group', 'GROUP'), ('location', 'LOCATION')], default=helper.enums.LevelType['GROUP'], max_length=20)),
                ('country', models.CharField(blank=True, max_length=150)),
                ('state', models.CharField(blank=True, max_length=150)),
                ('city', models.CharField(blank=True, max_length=150)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date created')),
                ('date_modified', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date modified')),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date created')),
                ('date_modified', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date modified')),
            ],
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date created')),
                ('date_modified', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date modified')),
            ],
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='state_country_code', to='administration.Country')),
            ],
        ),
        migrations.CreateModel(
            name='SectionFeature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date created')),
                ('date_modified', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date modified')),
                ('feature', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Section_features', to='administration.Features')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Section_features', to='administration.Section')),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_code', models.CharField(max_length=20, unique=True)),
                ('name', models.CharField(max_length=150)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('address', models.TextField()),
                ('city', models.CharField(max_length=150)),
                ('state', models.CharField(max_length=150)),
                ('zipcode', models.CharField(blank=True, max_length=20)),
                ('country', models.CharField(max_length=150)),
                ('currency', models.CharField(max_length=20)),
                ('realm', models.CharField(max_length=20, unique=True)),
                ('logo_url', models.URLField(blank=True)),
                ('home_page_url', models.URLField(blank=True)),
                ('google_map_key', models.CharField(blank=True, max_length=254)),
                ('timezone_name', models.CharField(max_length=150)),
                ('date_format', models.PositiveIntegerField(choices=[(1, 'd_m_Y'), (2, 'm_d_Y'), (3, 'd_M_Y')], default=helper.enums.DateFormat['d_m_Y'])),
                ('status', models.CharField(choices=[('active', 'ACTIVE'), ('expired', 'EXPIRED'), ('suspended', 'SUSPENDED')], default=helper.enums.CustomerStatus['ACTIVE'], max_length=20)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('date_modified', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date modified')),
                ('level', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='customer_level', to='administration.Level')),
            ],
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='city_state_code', to='administration.State')),
            ],
        ),
        migrations.CreateModel(
            name='RoleFeature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date created')),
                ('date_modified', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date modified')),
                ('feature', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Role_features', to='administration.Features')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Roles', to='administration.Role')),
            ],
            options={
                'unique_together': {('role', 'feature')},
            },
        ),
    ]
